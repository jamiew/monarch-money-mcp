name: Regenerate GitHub Pages Site

on:
  # Manual trigger only - Claude Code action doesn't support push events
  workflow_dispatch:
    inputs:
      update_reason:
        description: 'Reason for regenerating the site'
        required: false
        default: 'Manual update requested'

permissions:
  contents: write
  pull-requests: write
  actions: write  # Allow manual workflow dispatch

jobs:
  regenerate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Regenerate site with Claude
        uses: anthropics/claude-code-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            Please regenerate the GitHub Pages website at `docs/index.html` based on the current codebase.

            ## Design Specifications

            **Color Scheme:**
            - Primary: Black (#000000) and white (#ffffff)
            - Accent: Red-orange (#e85d4d) - inspired by monarchmoney.com
            - Secondary text: Medium gray (#666666)
            - Backgrounds: White (#ffffff) and off-white (#fafafa)
            - Code blocks: Dark gray/black (#1a1a1a) with light gray text (#e0e0e0)

            **Typography:**
            - Font stack: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Helvetica Neue', Arial, sans-serif
            - Monospace (for code/tool names): 'Courier New', monospace
            - Clean hierarchy with appropriate sizes and weights

            **Content Style:**
            - Simple, direct, informative
            - No hyperbolic or marketing language
            - Focus on facts and functionality
            - Clear, concise descriptions

            **Layout:**
            - Single-page design with anchor navigation
            - Sticky header (white background, subtle blur)
            - Sections: Hero ‚Üí Tools ‚Üí Installation ‚Üí Credits ‚Üí Footer
            - Responsive design (mobile breakpoint: 768px)
            - Maximum width: 1200px containers for readability

            ---

            ## Page Structure

            ### Header (Sticky)
            - **Logo:** Red-orange square (36px) with crown emoji üëë + "Monarch Money MCP" text
            - **Navigation:** Tools, Installation, Credits (gray links, black on hover)
            - **Button:** "GitHub ‚Üí" - black background, white text (red-orange on hover)
            - Links to: https://github.com/jamiew/monarch-money-mcp

            ### Hero Section
            - **Title:** "Monarch Money MCP Server" (2.5rem, bold, black)
            - **Subtitle:** "An MCP server that provides AI assistants with access to Monarch Money financial data." (1.125rem, gray)
            - **Stats Display:**
              - "20+" Tools
              - "42" Tests
              - "100%" Type-Safe
              - Format: Large red-orange number, small uppercase gray label
            - **Button:** "Get Started" ‚Üí links to #installation

            ### Tools Section (Light gray background)
            - **Title:** "Available Tools"
            - **Subtitle:** "Complete coverage of the Monarch Money API"

            **Tool Organization:**
            Group tools into these 5 categories with red-orange underlined headings:

            1. **Core Data Access**
               - get_accounts
               - get_transactions (‚ö†Ô∏è IMPORTANT: Include detailed "Key features" section with bullets for: natural language dates, compact format, filtering, pagination)
               - get_budgets
               - get_cashflow
               - get_transaction_categories

            2. **Transaction Management**
               - create_transaction
               - update_transaction

            3. **Investment & Banking**
               - get_account_holdings
               - get_account_history
               - get_institutions
               - refresh_accounts

            4. **Planning & Budgets**
               - get_recurring_transactions
               - set_budget_amount
               - create_manual_account

            5. **Intelligent Analysis**
               - get_transactions_batch
               - get_spending_summary
               - get_complete_financial_overview (‚ö†Ô∏è Include "Combines 5 API calls" section with bullets)
               - analyze_spending_patterns (‚ö†Ô∏è Include "Provides insights on" section with bullets)
               - get_usage_analytics

            **Tool Card Format:**
            - White background card with border
            - Tool name in monospace, bold, black
            - Description below in gray
            - For complex tools (marked ‚ö†Ô∏è above): Add parameter details section with border-top, smaller text

            **Extract tool info from:** Read `server.py` and find all functions decorated with `@mcp.tool()`. Use their docstrings for descriptions.

            ### Installation Section (White background)
            - **Title:** "Installation"
            - **Subtitle:** "Setup takes just a few minutes"

            **Step 1: Install Dependencies**
            ```
            cd /path/to/monarch-money-mcp
            uv sync
            ```

            **Step 2: Configure MCP Client**
            Show `.mcp.json` configuration:
            ```json
            {
              "mcpServers": {
                "monarch-money": {
                  "command": "/path/to/uv",
                  "args": [
                    "--directory",
                    "/path/to/monarch-money-mcp",
                    "run",
                    "python",
                    "server.py"
                  ],
                  "env": {
                    "MONARCH_EMAIL": "your-email@example.com",
                    "MONARCH_PASSWORD": "your-password",
                    "MONARCH_MFA_SECRET": "your-mfa-secret-key"
                  }
                }
              }
            }
            ```

            **Info Box:** "Getting Your MFA Secret"
            - Light gray background, red-orange left border
            - Steps to get MFA secret from Monarch Money (from README.md)

            **Step 3: Use with AI Assistant**
            Show example queries in code block

            ### Credits Section (Light gray background)
            - **Title:** "Credits"
            - **Subtitle:** "Built on open source tools"

            **4 Credit Cards (2x2 grid on desktop, stack on mobile):**

            1. **MCP Server**
               - Author: Taurus Colvin
               - Link: @colvint on GitHub
               - Description: "MCP server wrapper for Monarch Money with type safety and comprehensive testing."
               - Link: https://github.com/colvint/monarch-money-mcp ‚Üí "View Original Repository"

            2. **MonarchMoney Library**
               - Author: hammem
               - Link: @hammem on GitHub
               - Description: "The Python library that provides API access to Monarch Money."
               - Link: https://github.com/hammem/monarchmoney

            3. **Model Context Protocol**
               - By: Anthropic
               - Description: "Open protocol for connecting AI assistants to external data sources."
               - Link: https://modelcontextprotocol.io

            4. **Monarch Money**
               - Service: Financial Management
               - Description: "Platform for tracking accounts, budgets, and investments."
               - Link: https://www.monarchmoney.com

            ### Footer
            - White background, top border
            - Small gray text: "MIT License ‚Ä¢ GitHub ‚Ä¢ Issues"
            - Links:
              - GitHub: https://github.com/jamiew/monarch-money-mcp
              - Issues: https://github.com/jamiew/monarch-money-mcp/issues

            ---

            ## Technical Requirements

            - Single HTML file with embedded CSS (no external dependencies)
            - Fully responsive with @media query for screens <768px
            - Clean semantic HTML (proper heading hierarchy)
            - All links open in new tab (target="_blank") except anchor links
            - Accessible (proper ARIA labels if needed)

            ---

            ## Output Format

            Please read the current `docs/index.html` file and update it with any changes needed to match these specifications. Ensure all tool information is current by reading `server.py`.

            If the file already matches the specs, no changes are needed. Otherwise, update it and I'll create a PR with the changes.
